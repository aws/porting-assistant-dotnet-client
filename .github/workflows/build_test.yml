name: Build Test

on:
  push:
    branches: 
    - main
    - release/*
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Check for secrets leak on the repo
      run: |
          git clone https://github.com/awslabs/git-secrets.git target
          cd target
          ./install.ps1
          echo "Git-secrets installation completed"
          git secrets --register-aws --global
          echo "Added aws secret templates"
          git secrets --scan -r ../
          echo "Repository scan completed"
    - name: Setup .NET Versions
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: | 
          3.1.x
          5.0.x
          6.0.x
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Configure credentials to default profile
      env:
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_KEY }}
      run: |
        mkdir "~\.aws"
        "[default]" | Out-File -FilePath "~\.aws\credentials"
        "aws_access_key_id = $env:aws_access_key_id" | Out-File -FilePath "~\.aws\credentials" -Append
        "aws_secret_access_key = $env:aws_secret_access_key" | Out-File -FilePath "~\.aws\credentials" -Append
    - name: Test
      run: dotnet test --configuration Release --no-restore --verbosity normal  --collect:"XPlat Code Coverage" --results-directory ./coverage
    - name: Copy Coverage Report Location
      run: cp coverage/**/coverage.cobertura.xml coverage.cobertura.xml
    - name: Pack
      if: ${{ github.event_name == 'push' }}
      run: |
        dotnet pack --configuration Release --no-restore -o dist
        $json = Get-Content src/PortingAssistant.Client/PortingAssistantTelemetryConfig.json | ConvertFrom-Json
        $json.InvokeUrl = "https://encore-telemetry.us-east-1.amazonaws.com"
        $json.ServiceName = "encore"
        $json | ConvertTo-Json | Out-File src/PortingAssistant.Client/PortingAssistantTelemetryConfig.json
        echo $json
        dotnet publish src/PortingAssistant.Client/PortingAssistant.Client.CLI.csproj -r win-x64 -p:PublishSingleFile=true -p:IncludeAllContentForSelfExtract=true -p:IncludeSymbolsInSingleFile=false /p:DebugType=None /p:DebugSymbols=false --self-contained false -o dist
    - name: Install Sleet
      if: ${{ github.event_name == 'push' }}
      run: dotnet tool install -g sleet --version 3.2.0   
    - name: "Configure AWS Credentials"
      if: ${{ github.event_name == 'push' }}
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-west-2  
    - name: Publish
      if: ${{ github.event_name == 'push' }}
      run: sleet push dist --source s3Feed --verbose
    - name: Publish CLI Executable
      if: ${{ github.event_name == 'push' }}
      run: |
        Get-ChildItem ./dist/PortingAssistant.Client.CLI.*.nupkg | Foreach-Object { 
        $version =  $_.Name -replace 'PortingAssistant.Client.CLI.', '' -replace ‘.nupkg’, ‘’
        }
        $uploadLink = 's3://aws.portingassistant.dotnet.download/nuget/flatcontainer/portingassistant.client.cli/' + $version + '/'
        Echo $uploadLink
        aws s3 cp ./dist/PortingAssistant.Client.CLI.exe $uploadLink
  test-coverage:
    needs: build
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Code Coverage Summary
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage/**/coverage.cobertura.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'
    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md